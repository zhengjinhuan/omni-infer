Subject: [PATCH] abort kv loading failure request
---
Index: vllm/v1/core/sched/scheduler.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/vllm/v1/core/sched/scheduler.py b/vllm/v1/core/sched/scheduler.py
--- a/vllm/v1/core/sched/scheduler.py	(revision edb1279bb033e3dff7b7c42fe2a29d6e43a4675a)
+++ b/vllm/v1/core/sched/scheduler.py	(date 1755246093199)
@@ -806,6 +806,12 @@
             if stopped:
                 kv_transfer_params = self._free_request(request)
                 del new_token_ids[num_new:]  # Trim new tokens if needed.
+            # KVTransfer: if loading kv failed, abort the running request
+            aborted = False
+            if req_id in (model_runner_output.loading_kv_failure or ()):
+                request.stop_reason = "Abort for KV loading failure"
+                self.finish_requests(req_id, RequestStatus.FINISHED_ABORTED)
+                aborted = True

             # Extract sample logprobs if needed.
             if request.sampling_params.logprobs is not None and logprobs:
@@ -853,8 +859,10 @@
                 # Invariant: EngineCore returns no partial prefill outputs.
                 assert not prompt_logprobs_tensors

-            if not stopped:
+            if not stopped and not aborted:
                 new_running.append(request)
+        # KVTransfer: if loading kv failed, abort the requests
+        self._abort_loading_kv_failure_reqs(model_runner_output)

         # P/D: update state for finished KV Transfers.
         self._update_from_kv_xfer_finished(model_runner_output)
@@ -1056,3 +1064,21 @@
             logger.debug("Finished sending KV transfer for request %s", req_id)
             if req_id in self.requests:
                 self._free_blocks(self.requests[req_id])
+
+    def _abort_loading_kv_failure_reqs(self, model_runner_output: ModelRunnerOutput):
+        """
+        get loading kv failure request ids from the output
+        The Worker side connectors add loading_kv_failure to the output.
+        if loading_kv_failure: abort the requests
+
+        return True if request_id in model_runner_output.loading_kv_failure
+        """
+        logger.debug(f"loading_kv_failure = {model_runner_output.loading_kv_failure}")
+        for req_id in (model_runner_output.loading_kv_failure or ()):
+            request = self.requests.get(req_id)
+            if request is None:
+                # Invalid request ID.
+                continue
+            request.stop_reason = "Abort for KV loading failure"
+            self.finish_requests(req_id, RequestStatus.FINISHED_ABORTED)
+
Index: vllm/v1/outputs.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/vllm/v1/outputs.py b/vllm/v1/outputs.py
--- a/vllm/v1/outputs.py	(revision edb1279bb033e3dff7b7c42fe2a29d6e43a4675a)
+++ b/vllm/v1/outputs.py	(date 1755004250676)
@@ -103,6 +103,7 @@
     # [req_ids]
     finished_sending: Optional[set[str]] = None
     finished_recving: Optional[set[str]] = None
+    loading_kv_failure: Optional[set[str]] = None
 
 
 EMPTY_MODEL_RUNNER_OUTPUT = ModelRunnerOutput(req_ids=[],
@@ -112,4 +113,5 @@
                                               logprobs=None,
                                               prompt_logprobs_dict={},
                                               finished_sending=None,
-                                              finished_recving=None)
+                                              finished_recving=None,
+                                              loading_kv_failure=None)
Index: vllm/distributed/kv_transfer/kv_connector/v1/base.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/vllm/distributed/kv_transfer/kv_connector/v1/base.py b/vllm/distributed/kv_transfer/kv_connector/v1/base.py
--- a/vllm/distributed/kv_transfer/kv_connector/v1/base.py	(revision edb1279bb033e3dff7b7c42fe2a29d6e43a4675a)
+++ b/vllm/distributed/kv_transfer/kv_connector/v1/base.py	(date 1755004250676)
@@ -190,6 +190,12 @@
         """
         return None, None
 
+    def get_load_kv_failure_reqs(self) -> Optional[set[str]]:
+        """
+        Return kv loading failure requests
+        """
+        return None
+
     # ==============================
     # Scheduler-side methods
     # ==============================
